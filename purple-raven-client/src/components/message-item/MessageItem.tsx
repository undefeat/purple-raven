import * as React from 'react';

import './MessageItem.css';
import { MessageItemProps } from './MessageItemProps';
import { MessageItemState } from './MessageItemState';

class MessageItem extends React.Component<MessageItemProps, MessageItemState> {

	state: MessageItemState = {
		now: new Date()
	};

	intervalId: number;

	renderParagraphs(content: string) {
		return content.split(/\n/).map((line, index) => {
			if (line.trim().length === 0) {
				return null;
			}
			return <p key={index}>{line}</p>;
		});
	}

	isPlural(n: number) {
		const str = String(n);
		if (str.endsWith('1') && !str.endsWith('11')) {
			return false;
		}
		return true;
	}

	getTimePassed(dateFrom: Date, dateTo: Date) {
		const fromTimestamp = dateFrom.valueOf();
		const toTimestamp = dateTo.valueOf();

		if (fromTimestamp > toTimestamp) {
			return 'just now';
		}

		const secondsPassed = (toTimestamp - fromTimestamp) / 1000;
		const minutesPassed = Math.floor(secondsPassed / 60);
		const hoursPassed = Math.floor(secondsPassed / (60 * 60));
		const daysPassed = Math.floor(secondsPassed / (60 * 60 * 24));
		const monthsPassed = Math.floor(secondsPassed / (60 * 60 * 24 * 30.5));
		const yearsPassed = Math.floor(secondsPassed / (60 * 60 * 24 * 365));

		if (yearsPassed > 0) {
			if (this.isPlural(yearsPassed)) {
				return `${yearsPassed} years`;
			}
			return `${yearsPassed} year`;
		}

		if (monthsPassed > 0) {
			if (this.isPlural(monthsPassed)) {
				return `${monthsPassed} months`;
			}
			return `${monthsPassed} month`;
		}

		if (daysPassed > 0) {
			if (this.isPlural(daysPassed)) {
				return `${daysPassed} days`;
			}
			return `${daysPassed} day`;
		}

		if (hoursPassed > 0) {
			if (this.isPlural(hoursPassed)) {
				return `${hoursPassed} hours`;
			}
			return `${hoursPassed} hour`;
		}

		if (minutesPassed > 0) {
			if (this.isPlural(minutesPassed)) {
				return `${minutesPassed} mins`;
			}
			return `${minutesPassed} min`;
		}

		return 'just now';
	}

	componentDidMount() {
		this.intervalId = window.setInterval(
			() => {
				this.setState({ now: new Date() });
			},
			1000
		);
	}

	componentWillUnmount() {
		window.clearInterval(this.intervalId);
	}

	render() {
		const { isMine, author, content, createdDate, isConnectionMessage } = this.props;

		return (
			<article
				className={
					'message-item-comp' +
					(isMine ? ' my-message' : '') +
					(isConnectionMessage ? ' connection-message' : '')
				}
			>
				<header className="message-header">
				{isConnectionMessage &&
					<span className="author">
						<svg viewBox="0 0 1856.000000 1856.000000">
							<g transform="translate(0.000000,1856.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none">
								<path d="M3659 17266 c-2 -2 -30 -7 -63 -11 -218 -25 -490 -134 -841 -340 -153 -90 -169 -94 -345 -99 -173 -5 -183 -6 -410 -52 -121 -24 -325 -82 -530 -151 -486 -162 -803 -356 -974 -596 -48 -68 -111 -185 -103 -193 7 -7 122 -31 188 -39 30 -3 61 -8 69 -10 8 -3 42 -7 75 -10 92 -8 163 -14 240 -20 39 -3 86 -8 105 -10 19 -3 71 -7 115 -10 44 -3 98 -7 120 -9 22 -2 81 -7 130 -11 50 -3 106 -8 125 -10 19 -2 72 -7 117 -10 45 -3 92 -8 105 -10 13 -3 46 -7 73 -10 28 -3 100 -14 160 -25 61 -10 126 -22 145 -25 79 -13 169 -82 235 -179 28 -42 106 -196 98 -196 -3 0 -1 -6 5 -12 10 -13 14 -24 50 -153 38 -131 57 -272 55 -410 -1 -49 -4 -200 -7 -335 -5 -236 -1 -320 13 -320 4 0 8 15 9 33 3 41 20 105 30 111 4 2 5 -16 3 -40 -2 -34 0 -44 12 -44 10 0 20 22 31 73 9 39 24 83 32 97 14 23 14 3 9 -205 -7 -266 -8 -282 -30 -455 -3 -19 -7 -55 -10 -80 -3 -25 -8 -56 -10 -70 -3 -14 -7 -41 -10 -60 -3 -19 -10 -59 -15 -89 -6 -30 -10 -56 -10 -58 0 -1 6 0 14 3 16 6 15 -20 -9 -156 -9 -51 -19 -106 -20 -110 -2 -7 -15 -86 -21 -130 -9 -61 -17 -250 -11 -250 4 0 11 19 18 42 6 23 17 51 24 61 14 20 15 15 30 -123 7 -55 24 -110 35 -110 4 0 13 15 20 33 18 47 22 22 12 -76 -4 -47 -5 -94 -1 -103 5 -17 7 -16 19 6 12 23 13 23 26 5 13 -18 15 -16 31 23 9 23 19 42 24 42 4 0 8 -46 8 -102 0 -119 5 -149 25 -163 13 -10 34 -84 75 -266 19 -84 19 -160 2 -256 -6 -35 -12 -96 -13 -135 -1 -69 10 -237 17 -248 2 -3 6 -25 10 -50 4 -24 12 -53 17 -65 6 -11 10 -21 9 -23 -12 -12 44 -169 106 -301 61 -127 144 -247 272 -393 109 -125 152 -165 296 -278 123 -97 184 -166 276 -316 46 -76 86 -143 88 -148 2 -6 12 -19 23 -30 10 -11 18 -25 18 -31 0 -7 9 -20 20 -30 11 -10 20 -24 20 -31 0 -7 3 -14 8 -16 4 -1 36 -43 72 -93 35 -49 72 -99 82 -110 29 -36 142 -178 193 -245 27 -36 52 -67 55 -70 8 -8 163 -219 199 -272 84 -125 210 -368 301 -584 23 -53 46 -104 50 -113 13 -22 60 -131 60 -136 0 -3 21 -49 46 -102 64 -136 194 -442 194 -457 0 -6 4 -16 9 -22 20 -20 134 -386 196 -627 89 -347 121 -490 191 -852 2 -11 8 -42 13 -70 6 -27 13 -68 16 -90 6 -40 7 -50 25 -155 5 -30 12 -73 15 -94 3 -21 7 -48 10 -60 4 -21 12 -69 20 -133 7 -46 35 -205 40 -223 12 -46 32 -249 29 -305 -5 -100 -20 -119 -395 -494 -152 -152 -328 -318 -380 -357 -19 -14 -70 -49 -114 -77 -71 -47 -84 -60 -122 -126 -38 -68 -60 -92 -88 -97 -5 -1 -26 -5 -45 -8 -19 -4 -42 -9 -50 -11 -21 -6 -258 -17 -424 -19 -165 -3 -178 0 -389 105 -142 70 -152 73 -220 74 -59 0 -82 -5 -129 -28 -90 -44 -169 -140 -184 -224 -3 -14 -8 -31 -11 -37 -3 -6 18 12 48 40 105 100 199 139 298 123 64 -10 99 -31 107 -64 5 -20 -3 -38 -36 -81 -45 -60 -106 -181 -115 -229 -3 -16 -8 -57 -12 -90 -6 -56 -5 -59 12 -45 9 8 47 53 83 100 37 47 69 87 72 90 3 3 15 17 27 32 l21 28 16 -34 c9 -19 16 -38 16 -44 0 -5 13 -24 28 -40 31 -33 29 -33 151 -12 72 13 138 13 162 -1 29 -15 115 -16 184 -3 120 25 196 10 290 -57 39 -28 43 -29 145 -25 192 6 229 16 332 84 70 46 91 51 178 39 25 -3 72 -9 105 -12 33 -4 70 -8 82 -10 112 -17 390 -24 486 -11 46 6 64 14 87 38 33 34 70 123 70 168 0 42 16 77 41 90 39 22 126 24 175 5 52 -20 80 -54 117 -145 29 -69 71 -124 90 -117 16 5 11 94 -9 172 -20 76 -53 133 -108 183 -119 109 -241 117 -464 30 -112 -43 -274 -93 -344 -104 -125 -20 -201 23 -201 114 0 90 31 134 307 441 32 37 176 183 320 327 219 217 274 278 333 367 120 178 171 310 190 482 13 124 8 402 -12 610 -2 28 -7 90 -10 139 l-5 89 30 -32 c17 -17 30 -35 30 -40 0 -5 16 -26 35 -47 28 -31 37 -36 44 -25 7 11 17 0 41 -43 23 -40 36 -54 43 -47 7 7 7 19 -2 38 -12 27 -11 27 20 -6 33 -34 50 -30 30 8 -20 36 -11 35 24 -5 30 -34 34 -36 35 -17 0 12 -4 25 -10 28 -5 3 -10 12 -10 18 1 7 10 1 21 -12 11 -13 22 -22 24 -19 7 7 -20 92 -59 186 -19 45 -30 82 -26 82 5 0 14 -8 19 -17 9 -15 12 -16 20 -4 6 10 4 22 -6 38 -29 44 -5 35 42 -16 62 -66 76 -58 49 26 -3 10 11 0 30 -22 30 -33 38 -37 46 -25 8 13 13 11 32 -10 17 -19 185 -223 205 -249 1 -2 9 2 18 9 8 7 25 10 40 6 22 -6 24 -4 16 16 -13 36 -3 53 20 32 18 -16 19 -16 19 9 0 14 -4 37 -10 51 -9 25 2 37 15 16 8 -12 35 -13 35 -2 0 5 -9 19 -20 32 -11 13 -20 25 -20 27 0 2 9 1 20 -2 24 -8 24 -10 3 51 -18 52 -48 112 -89 172 -24 34 -24 37 -7 41 10 2 21 8 24 13 4 5 28 -15 55 -46 26 -31 51 -56 55 -56 13 0 -12 62 -44 108 -16 24 -26 46 -23 50 4 3 13 -4 22 -16 17 -24 36 -29 33 -9 -1 6 -1 23 0 36 l1 23 20 -23 c15 -19 21 -21 28 -11 5 8 12 13 16 13 3 -1 8 -1 11 -1 2 0 -2 19 -11 42 -8 22 -12 44 -9 46 3 3 19 -10 35 -29 47 -55 42 -23 -35 224 -20 65 -34 125 -31 134 12 31 80 8 218 -74 192 -114 261 -190 253 -280 -1 -15 -12 -64 -24 -109 -28 -101 -31 -142 -14 -174 16 -31 17 -62 2 -77 -8 -8 -6 -14 10 -22 16 -9 19 -18 14 -44 -3 -17 -10 -39 -14 -49 -5 -9 -11 -37 -14 -63 -5 -38 -3 -46 8 -42 11 4 13 -15 13 -97 -1 -118 3 -151 43 -401 31 -188 31 -190 35 -305 4 -108 3 -115 -58 -375 -22 -95 -108 -485 -122 -553 -24 -118 -195 -666 -258 -826 -93 -236 -133 -287 -333 -423 -65 -44 -176 -119 -246 -167 -159 -109 -200 -129 -310 -155 -106 -25 -150 -46 -206 -101 -37 -36 -89 -125 -95 -163 -1 -7 -5 -17 -9 -23 -6 -11 -37 -130 -37 -147 0 -10 113 111 159 170 33 42 91 84 138 97 22 7 27 3 97 -73 24 -27 35 -31 70 -30 75 4 138 36 217 111 51 48 119 101 124 96 12 -12 -149 -301 -250 -448 -93 -136 -142 -236 -161 -325 -19 -95 -22 -140 -22 -280 l0 -160 23 65 c12 36 34 115 49 175 30 123 68 210 122 277 l37 45 41 -15 c153 -53 235 -11 306 159 36 85 50 106 89 137 84 67 138 131 200 234 34 57 70 114 80 127 l19 25 163 -83 c169 -85 233 -104 306 -92 35 6 38 9 67 84 33 84 22 77 126 81 88 4 194 -33 253 -89 32 -31 79 -119 100 -191 28 -95 82 -174 119 -174 10 0 4 106 -11 187 -59 308 -282 516 -506 470 -16 -3 -63 -13 -104 -22 -40 -9 -80 -13 -90 -10 -25 8 -147 127 -163 160 -26 50 -28 79 -28 345 -1 253 1 318 14 375 3 17 8 39 11 50 16 79 75 246 145 410 63 149 66 155 92 215 14 30 47 120 72 200 67 204 104 295 143 349 196 272 320 493 367 655 14 49 28 92 32 95 3 3 13 -4 21 -17 9 -12 24 -22 34 -22 15 0 18 6 14 38 -2 20 -7 78 -10 127 -3 50 -7 104 -9 120 -3 17 -8 64 -12 105 -4 41 -8 77 -9 80 -1 3 -5 37 -9 75 -5 39 -10 79 -12 90 -2 10 -6 48 -10 83 l-6 65 23 -16 c25 -18 49 -8 49 20 0 12 3 12 16 -1 24 -25 49 -35 63 -27 9 6 4 13 -16 26 -47 31 -74 77 -32 55 11 -7 28 -9 37 -5 14 6 12 10 -13 30 -36 30 -27 43 13 19 17 -10 37 -14 47 -10 16 6 15 10 -10 36 -16 17 -61 51 -101 76 -63 41 -114 97 -101 110 3 3 21 -2 41 -10 34 -14 37 -14 43 1 4 9 1 19 -5 21 -7 2 -12 10 -12 18 0 9 5 12 10 9 6 -3 13 1 16 10 5 11 -5 26 -30 46 -20 17 -36 36 -36 43 0 8 23 24 52 36 53 23 141 30 208 17 19 -4 48 -9 65 -12 56 -11 161 -58 422 -191 144 -73 278 -136 299 -140 52 -10 90 14 139 84 109 157 222 233 405 273 67 14 334 20 387 9 21 -5 63 -11 93 -15 91 -10 244 -43 450 -97 107 -28 213 -55 235 -60 22 -5 47 -11 55 -13 23 -6 351 -76 381 -81 14 -3 75 -18 135 -35 60 -16 116 -32 124 -34 8 -2 62 -18 119 -35 57 -17 111 -33 120 -35 9 -2 32 -9 51 -14 44 -14 242 -58 292 -66 211 -34 370 -22 542 39 36 12 44 12 85 -6 25 -11 113 -42 195 -69 185 -62 219 -78 331 -152 109 -73 174 -104 249 -118 65 -12 86 -3 86 37 0 13 5 24 11 24 11 0 156 -74 329 -168 36 -19 128 -72 205 -118 77 -45 152 -88 168 -95 37 -17 69 -1 91 45 9 20 21 36 25 36 9 0 136 -83 251 -165 156 -110 257 -151 387 -154 l80 -2 22 60 c12 33 26 63 31 66 6 4 29 -9 53 -28 94 -77 254 -138 363 -140 60 -1 77 2 107 23 41 28 69 101 63 163 -3 26 0 37 7 34 7 -3 72 -40 146 -84 l134 -80 47 18 c76 29 161 19 315 -36 72 -25 160 -52 197 -60 83 -16 89 -11 93 80 2 35 7 70 10 76 8 12 58 7 132 -16 61 -18 140 -22 155 -7 23 23 -64 145 -146 201 -22 16 -158 88 -301 161 -265 135 -602 309 -710 367 -33 18 -73 39 -90 47 -16 8 -48 25 -70 38 -297 170 -382 217 -510 283 -177 91 -280 158 -511 332 -421 315 -1139 838 -1339 973 -27 19 -54 38 -60 42 -5 5 -82 58 -170 119 -158 109 -207 146 -175 135 14 -5 277 -52 345 -62 17 -3 50 -9 75 -14 25 -5 56 -12 70 -14 14 -3 72 -14 130 -25 58 -11 130 -25 160 -31 30 -5 64 -12 75 -15 11 -2 97 -20 190 -40 94 -19 178 -38 187 -41 9 -3 25 -7 36 -9 65 -12 227 -49 352 -80 80 -20 152 -38 160 -40 8 -2 44 -11 80 -20 36 -9 72 -18 80 -20 99 -20 659 -177 945 -265 429 -132 511 -154 695 -185 125 -22 136 -22 153 -7 15 13 17 25 12 60 l-7 44 44 -6 c46 -6 162 -42 313 -96 132 -47 212 -69 280 -76 33 -4 63 -8 66 -10 3 -2 14 3 24 10 15 10 18 25 16 77 -4 133 -90 254 -305 427 -193 156 -306 218 -711 390 -279 118 -655 246 -980 332 -44 12 -111 30 -150 40 -180 48 -400 106 -610 160 -126 32 -304 80 -395 105 -91 25 -172 48 -180 50 -130 32 -460 121 -505 136 -70 24 -235 106 -312 155 -29 19 -55 34 -58 34 -2 0 -32 19 -67 43 -35 23 -75 48 -89 56 -157 92 -243 134 -414 203 -55 22 -122 50 -150 63 -27 12 -61 26 -74 30 -30 9 -18 19 44 35 86 21 148 41 206 67 l56 25 -42 81 c-23 45 -57 116 -75 157 -29 66 -92 176 -109 190 -3 3 -14 14 -24 26 -16 19 -16 24 -2 50 13 25 13 31 -1 49 -22 30 -102 153 -164 251 -66 105 -152 194 -282 292 -244 182 -546 324 -1198 562 -324 118 -451 173 -632 272 -371 202 -516 254 -768 273 -140 11 -179 15 -315 30 -57 7 -151 32 -202 55 -80 35 -138 83 -303 250 -91 92 -183 180 -204 196 -21 16 -44 34 -50 39 -6 6 -65 50 -131 100 -66 49 -368 288 -671 530 -303 242 -597 476 -654 520 -56 44 -146 114 -199 156 -53 41 -181 140 -286 219 -104 79 -192 147 -195 150 -3 3 -54 41 -115 83 -308 217 -343 251 -420 403 -27 54 -101 185 -164 289 -100 168 -191 324 -269 465 -14 25 -36 62 -49 82 -12 21 -23 40 -23 42 0 4 -35 64 -188 326 -290 496 -550 812 -876 1064 -107 83 -175 123 -358 210 -265 127 -349 147 -644 152 -110 2 -203 2 -205 0z" />
							</g>
						</svg>
					</span>
				}
				{!isMine && !isConnectionMessage &&
					<span className="author">
						{author[0]}
						<div className="title">{author}</div>
					</span>
				}
				</header>
				<div className="message-content">
					{this.renderParagraphs(content)}
				</div>
				{createdDate !== null &&
				<footer className="message-footer">
					<time dateTime={createdDate.toISOString()}>
						{this.getTimePassed(createdDate, this.state.now)}
					</time>
				</footer>
				}
			</article>
		);
	}
}

export default MessageItem;
